using System;
using System.Drawing;
using System.Drawing.Printing;
using System.Windows.Forms;

namespace PrintReportForm
{
    public partial class PrintReportDemoForm : Form
    {
        PrintPreviewDialog printPreviewDialog1 = new PrintPreviewDialog();
        PrintDocument printDocument1 = new PrintDocument();
        PrintDialog PrintDialog1 = new PrintDialog();

        public PrintReportDemoForm()
        {
            InitializeComponent();
            printDocument1.PrintPage += PrintDocument1_PrintPage;
        }

        private void PrintDocument1_PrintPage(object sender, PrintPageEventArgs e)
        {
            printDocument1.DocumentName = "Report Outcome For Measurements";
            Font headerFont = new Font("Arial", 50, FontStyle.Bold);
            Font subHeaderFont = new Font("Arial", 30, FontStyle.Italic);
            Font dataFont = new Font("Arial", 25, FontStyle.Regular);

            string text = "Report Outcome Page";
            
            e.Graphics.DrawString(text, headerFont, Brushes.Black, 50, 50);

            ReportModel report = new ReportModel();
            e.Graphics.DrawString($"Report Generated by Code with Alfred", subHeaderFont, Brushes.Black, 50, 200);

            e.Graphics.DrawString($"Serial number: {report.SerialNumber}", dataFont, Brushes.Black, 50, 300);
            e.Graphics.DrawString($"Date Time: {report.ReportDateTime}", dataFont, Brushes.Black, 50, 350);
            e.Graphics.DrawString($"Pass: {report.Pass.ToString()}", dataFont, Brushes.Black, 50, 400);
            e.Graphics.DrawString($"Expected Value: {report.ExpectedMeasurement.ToString()}", dataFont, Brushes.Black, 50, 450);
            e.Graphics.DrawString($"Actual Value: {report.ActualMeasurement.ToString()}", dataFont, Brushes.Black, 50, 500);
            e.Graphics.DrawString($"Error [%] {report.Error.ToString()}", dataFont, Brushes.Black, 50, 600);
        }
        class ReportModel
        {
            public string SerialNumber { get; set; } = "Serial123456";
            public string ReportDateTime { get; set; } = DateTime.Now.ToString();
            public bool Pass { get; set; } = false;
            public double ExpectedMeasurement { get; set; } = 100;

            public double ActualMeasurement { get; set; } = 50;
            public double Error
            {
                get { return ((ActualMeasurement - ExpectedMeasurement) / ExpectedMeasurement) * 100; }
            }
        }

        private void printPreviewToolStripMenuItem_Click(object sender, EventArgs e)
        {
            printPreviewDialog1.Document = printDocument1;
            printPreviewDialog1.ShowDialog();
        }

        private void printToolStripMenuItem_Click(object sender, EventArgs e)
        {
            PrintDialog1.Document = printDocument1;
            printDocument1.Print();
        }

        private void exitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}
